// Foreground

#define SPRITE_DEC_2( x, i ) mod( floor( i / pow( 2.0, mod( x, 24.0 ) ) ), 2.0 )
#define SPRITE_DEC_3( x, i ) mod( floor( i / pow( 4.0, mod( x, 11.0 ) ) ), 4.0 )
#define SPRITE_DEC_4( x, i ) mod( floor( i / pow( 4.0, mod( x, 8.0 ) ) ), 4.0 )
#define RGB( r, g, b ) vec3( float( r ) / 255.0, float( g ) / 255.0, float( b ) / 255.0 )

const float NES_RES_X           = 224.0;
const float NES_RES_Y           = 192.0;
const float STATE_RUN           = 0.0;
const float STATE_PRONE         = 1.0;
const float STATE_JUMP          = 2.0;
const float STATE_FALL          = 3.0;
const float STATE_WATER         = 4.0;
const float STATE_UNDER_WATER   = 5.0;
const vec2  BILL_PRONE_SIZE     = vec2( 32.0, 18.0 );
const vec2  BILL_RUN_SIZE       = vec2( 24.0, 34.0 );
const vec2  BILL_JUMP_SIZE      = vec2( 20.0, 20.0 );
const vec2  SOLDIER_SIZE        = vec2( 18.0, 32.0 );
const vec2  SNIPER_SIZE         = vec2( 24.0, 32.0 );
const vec2  TURRET_SIZE         = vec2( 32.0, 32.0 );
const vec2  BOSS_CORE_SIZE      = vec2( 24.0, 31.0 );

// storage
const vec2 txPlayer 			= vec2( 0.0, 0.0 ); 	// xy - pos, z - jump start, w - jump dir
const vec2 txPlayerState		= vec2( 1.0, 0.0 ); 	// x - state, y - frame, z - jump tick, w - lifes
const vec2 txPlayerDir			= vec2( 2.0, 0.0 ); 	// xy - dir, z - flip, w - immortality
const vec2 txPlayerWeapon		= vec2( 3.0, 0.0 ); 	// x - weapon, y - weapon cooldown, z - weapon fire rate, w - weapon bullet num
const vec2 txCamera 			= vec2( 4.0, 0.0 ); 	// x - cam offset, y - spawn counter, z - soldier spawn counter
const vec2 txSoldier0 			= vec2( 5.0, 0.0 ); 	// xy - pos, z - flip
const vec2 txSoldier1 			= vec2( 5.0, 1.0 ); 	// xy - pos, z - flip
const vec2 txSoldier2 			= vec2( 5.0, 2.0 ); 	// xy - pos, z - flip
const vec2 txSoldier0State 		= vec2( 6.0, 0.0 ); 	// x - state, y - frame, z - jump tick
const vec2 txSoldier1State 		= vec2( 6.0, 1.0 ); 	// x - state, y - frame, z - jump tick
const vec2 txSoldier2State 		= vec2( 6.0, 2.0 ); 	// x - state, y - frame, z - jump tick
const vec2 txSniper	 			= vec2( 7.0, 0.0 ); 	// xy - pos, z - flip, w - weapon cooldown
const vec2 txPlayerBullet0 		= vec2( 8.0, 0.0 ); 	// xy - pos, xy - dir
const vec2 txPlayerBullet1 		= vec2( 8.0, 1.0 ); 	// xy - pos, xy - dir
const vec2 txPlayerBullet2 		= vec2( 8.0, 2.0 ); 	// xy - pos, xy - dir
const vec2 txPlayerBullet3 		= vec2( 8.0, 3.0 ); 	// xy - pos, xy - dir
const vec2 txPlayerBullet4 		= vec2( 8.0, 4.0 ); 	// xy - pos, xy - dir
const vec2 txPlayerBullet5 		= vec2( 8.0, 5.0 ); 	// xy - pos, xy - dir
const vec2 txEnemyBullet0 		= vec2( 9.0, 0.0 ); 	// xy - pos, xy - dir
const vec2 txEnemyBullet1 		= vec2( 9.0, 1.0 ); 	// xy - pos, xy - dir
const vec2 txEnemyBullet2 		= vec2( 9.0, 2.0 ); 	// xy - pos, xy - dir
const vec2 txEnemyBullet3 		= vec2( 9.0, 3.0 ); 	// xy - pos, xy - dir
const vec2 txExplosion 			= vec2( 10.0, 0.0 ); 	// xy - pos, z - frame
const vec2 txHit 				= vec2( 11.0, 0.0 ); 	// xy - pos, z - frame
const vec2 txTurret0			= vec2( 12.0, 0.0 ); 	// xy - pos, z - angle
const vec2 txTurret1			= vec2( 12.0, 1.0 ); 	// xy - pos, z - angle
const vec2 txTurret0State		= vec2( 13.0, 0.0 ); 	// x - HP, y - weapon cooldown
const vec2 txTurret1State		= vec2( 13.0, 1.0 ); 	// x - HP, y - weapon cooldown
const vec2 txPowerUp			= vec2( 14.0, 0.0 ); 	// xy - pos, z - frame
const vec2 txPowerUpState		= vec2( 15.0, 0.0 ); 	// x - state, y - initial height, z - jump tick
const vec2 txBossCore			= vec2( 16.0, 0.0 ); 	// xy - pos, z - HP
const vec2 txBossCannon0		= vec2( 17.0, 0.0 ); 	// xy - pos, z - cooldown, w - HP
const vec2 txBossCannon1		= vec2( 17.0, 1.0 ); 	// xy - pos, z - cooldown, w - HP
const vec2 txBossBullet0		= vec2( 18.0, 0.0 ); 	// xy - pos, zw - velocity
const vec2 txBossBullet1		= vec2( 18.0, 1.0 ); 	// xy - pos, zw - velocity
const vec2 txGameState			= vec2( 19.0, 0.0 ); 	// x - state, y - state tick
const vec2 txBridge				= vec2( 20.0, 0.0 ); 	// x - draw start, y - explode tick

void Swap( inout float a, inout float b )
{
    float tmp = a;
    a = b;
    b = tmp;
}

vec4 LoadValue( vec2 tx )
{
    return floor( texture( iChannel0, ( tx + 0.5 ) / iChannelResolution[ 0 ].xy ) );
}

void SpriteTurret( inout vec3 color, float x, float y, float frame )
{
    float idx = 0.0;    
    
    if ( frame == 0.0 )
    {
        // left
        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 0.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65533.0 : 21.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 48927.0 : 127.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 44922.0 : 426.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 21780.0 : ( x <= 15.0 ? 27621.0 : 425.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 43625.0 : ( x <= 15.0 ? 11162.0 : 681.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 65469.0 : ( x <= 15.0 ? 11127.0 : 681.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 43625.0 : ( x <= 15.0 ? 11262.0 : 681.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 21845.0 : ( x <= 15.0 ? 27509.0 : 425.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 21844.0 : ( x <= 15.0 ? 44650.0 : 427.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 17680.0 : ( x <= 15.0 ? 47642.0 : 362.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 43689.0 : 341.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21845.0 : 85.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 5.0 ) ) : idx; 
    }
    else if ( frame == 1.0 )
    {
        // up - left
        idx = y == 14.0 ? ( x <= 7.0 ? 276.0 : ( x <= 15.0 ? 64.0 : 0.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 361.0 : ( x <= 15.0 ? 1488.0 : 0.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 5753.0 : ( x <= 15.0 ? 24564.0 : 0.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 27541.0 : ( x <= 15.0 ? 48253.0 : 1.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 47701.0 : ( x <= 15.0 ? 65014.0 : 7.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 58708.0 : ( x <= 15.0 ? 45018.0 : 30.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 38208.0 : ( x <= 15.0 ? 43766.0 : 106.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 25856.0 : ( x <= 15.0 ? 27381.0 : 169.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 10939.0 : 169.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 19129.0 : 169.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 19124.0 : 170.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 38587.0 : 106.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 44713.0 : 106.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 43669.0 : 90.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 85.0 ) ) : idx;   
    }
    else
    {
        // down - left
        idx = y == 14.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21824.0 : 5.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65428.0 : 27.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 45053.0 : 106.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 53248.0 : ( x <= 15.0 ? 38591.0 : 106.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 19188.0 : 170.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 58368.0 : ( x <= 15.0 ? 19133.0 : 169.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 10938.0 : 169.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 25600.0 : ( x <= 15.0 ? 27365.0 : 169.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 43750.0 : 107.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 58624.0 : ( x <= 15.0 ? 44954.0 : 90.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 47680.0 : ( x <= 15.0 ? 47526.0 : 86.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 27540.0 : ( x <= 15.0 ? 43113.0 : 85.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 22137.0 : ( x <= 15.0 ? 23205.0 : 5.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 38249.0 : ( x <= 15.0 ? 21909.0 : 1.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 21844.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;      
    }

    idx = SPRITE_DEC_4( x, idx );    
    idx = x >= 0.0 && x < 21.0 ? idx : 0.0;

    float blink = abs( sin( iTime * 3.0 ) ) + 0.5;
    
    color = idx == 0.0 && x >= 8.0 && x < 16.0 && y >= 3.0 && y < 12.0 ? blink * RGB( 228, 68, 52 ) : color;
    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;
    color = idx == 2.0 ? RGB( 192, 192, 192 ) : color;
    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;
}

void SpriteTurretBase( inout vec3 color, float x, float y )
{
    float idx = 0.0;    
    
    idx = y == 31.0 ? ( x <= 10.0 ? 2796201.0 : ( x <= 21.0 ? 2796202.0 : 174762.0 ) ) : idx;
    idx = y == 30.0 ? ( x <= 10.0 ? 1398102.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;
    idx = y == 29.0 ? ( x <= 10.0 ? 2796182.0 : ( x <= 21.0 ? 2796202.0 : 289450.0 ) ) : idx;
    idx = y == 28.0 ? ( x <= 10.0 ? 2796198.0 : ( x <= 21.0 ? 2796202.0 : 285354.0 ) ) : idx;
    idx = y == 27.0 ? ( x <= 10.0 ? 1398182.0 : ( x <= 21.0 ? 1398101.0 : 279893.0 ) ) : idx;
    idx = y == 26.0 ? ( x <= 10.0 ? 1397158.0 : ( x <= 21.0 ? 1398101.0 : 279637.0 ) ) : idx;
    idx = y == 25.0 ? ( x <= 10.0 ? 1399206.0 : ( x <= 21.0 ? 1398101.0 : 280149.0 ) ) : idx;
    idx = y == 24.0 ? ( x <= 10.0 ? 21926.0 : ( x <= 21.0 ? 0.0 : 279888.0 ) ) : idx;
    idx = y == 23.0 ? ( x <= 10.0 ? 2692518.0 : ( x <= 21.0 ? 2796202.0 : 279905.0 ) ) : idx;
    idx = y == 22.0 ? ( x <= 10.0 ? 1709478.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 21.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 20.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 19.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 18.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 17.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 16.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 15.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 14.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 13.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 12.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 11.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 10.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 9.0 ? ( x <= 10.0 ? 1381798.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;
    idx = y == 8.0 ? ( x <= 10.0 ? 5542.0 : ( x <= 21.0 ? 0.0 : 279904.0 ) ) : idx;
    idx = y == 7.0 ? ( x <= 10.0 ? 2774438.0 : ( x <= 21.0 ? 2796202.0 : 279898.0 ) ) : idx;
    idx = y == 6.0 ? ( x <= 10.0 ? 1398182.0 : ( x <= 21.0 ? 1398101.0 : 279893.0 ) ) : idx;
    idx = y == 5.0 ? ( x <= 10.0 ? 1397158.0 : ( x <= 21.0 ? 1398101.0 : 279637.0 ) ) : idx;
    idx = y == 4.0 ? ( x <= 10.0 ? 1399206.0 : ( x <= 21.0 ? 1398101.0 : 280149.0 ) ) : idx;
    idx = y == 3.0 ? ( x <= 10.0 ? 102.0 : ( x <= 21.0 ? 0.0 : 278528.0 ) ) : idx;
    idx = y == 2.0 ? ( x <= 10.0 ? 1398102.0 : ( x <= 21.0 ? 1398101.0 : 283989.0 ) ) : idx;
    idx = y == 1.0 ? ( x <= 10.0 ? 6.0 : ( x <= 21.0 ? 0.0 : 262144.0 ) ) : idx;
    idx = y == 0.0 ? ( x <= 10.0 ? 1398100.0 : ( x <= 21.0 ? 1398101.0 : 87381.0 ) ) : idx;

    idx = SPRITE_DEC_3( x, idx );    
    if ( x >= 0.0 && x < 32.0 && y >= 0.0 && y < 32.0 )
    {
        color = RGB( 0, 0, 0 );
        color = idx == 1.0 ? RGB( 192, 192, 192 ) : color;
        color = idx == 2.0 ? RGB( 255, 255, 255 ) : color;  
    }
}

void SpriteSniper( inout vec3 color, float x, float y )
{
    float idx = 0.0; 
    
    idx = y == 30.0 ? ( x <= 7.0 ? 21504.0 : 0.0 ) : idx;
    idx = y == 29.0 ? ( x <= 7.0 ? 43264.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;
    idx = y == 28.0 ? ( x <= 7.0 ? 48704.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;
    idx = y == 27.0 ? ( x <= 7.0 ? 23104.0 : ( x <= 15.0 ? 5125.0 : ( x <= 23.0 ? 20821.0 : 0.0 ) ) ) : idx;
    idx = y == 26.0 ? ( x <= 7.0 ? 62720.0 : ( x <= 15.0 ? 32085.0 : ( x <= 23.0 ? 30711.0 : 0.0 ) ) ) : idx;
    idx = y == 25.0 ? ( x <= 7.0 ? 30032.0 : ( x <= 15.0 ? 65021.0 : ( x <= 23.0 ? 20863.0 : 0.0 ) ) ) : idx;
    idx = y == 24.0 ? ( x <= 7.0 ? 21924.0 : ( x <= 15.0 ? 21855.0 : ( x <= 23.0 ? 117.0 : 0.0 ) ) ) : idx;
    idx = y == 23.0 ? ( x <= 7.0 ? 55993.0 : ( x <= 15.0 ? 58869.0 : ( x <= 23.0 ? 21.0 : 0.0 ) ) ) : idx;
    idx = y == 22.0 ? ( x <= 7.0 ? 22185.0 : ( x <= 15.0 ? 63997.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
    idx = y == 21.0 ? ( x <= 7.0 ? 64917.0 : ( x <= 15.0 ? 23903.0 : 0.0 ) ) : idx;
    idx = y == 20.0 ? ( x <= 7.0 ? 64852.0 : ( x <= 15.0 ? 1893.0 : 0.0 ) ) : idx;
    idx = y == 19.0 ? ( x <= 7.0 ? 21860.0 : ( x <= 15.0 ? 342.0 : 0.0 ) ) : idx;
    idx = y == 18.0 ? ( x <= 7.0 ? 27280.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
    idx = y == 17.0 ? ( x <= 7.0 ? 54608.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;
    idx = y == 16.0 ? ( x <= 7.0 ? 21824.0 : ( x <= 15.0 ? 26.0 : 0.0 ) ) : idx;
    idx = y == 15.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 90.0 : 0.0 ) ) : idx;
    idx = y == 14.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 105.0 : 0.0 ) ) : idx;
    idx = y == 13.0 ? ( x <= 7.0 ? 27200.0 : ( x <= 15.0 ? 426.0 : 0.0 ) ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 28304.0 : ( x <= 15.0 ? 490.0 : 0.0 ) ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 7824.0 : ( x <= 15.0 ? 489.0 : 0.0 ) ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 7824.0 : ( x <= 15.0 ? 421.0 : 0.0 ) ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 1956.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 404.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 1360.0 : 0.0 ) ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 21.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 53.0 : ( x <= 15.0 ? 7488.0 : 0.0 ) ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 213.0 : ( x <= 15.0 ? 30016.0 : 0.0 ) ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 340.0 : ( x <= 15.0 ? 21824.0 : 0.0 ) ) : idx;

    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;

    color = idx == 1.0 ? RGB( 0,   0,  0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56, 0 ) : color;
    color = idx == 3.0 ? y > 16.0 ? RGB( 240, 208, 176 ) : RGB( 255, 255, 255 ) : color;      
}

void SpriteSoldier( inout vec3 color, float x, float y, float frame )
{
    float idx = 0.0;    
    
    if ( frame == 0.0 )
    {
        idx = y == 31.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;
        idx = y == 30.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 6804.0 : 0.0 ) ) : idx;
        idx = y == 29.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 27621.0 : 0.0 ) ) : idx;
        idx = y == 28.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 5781.0 : 0.0 ) ) : idx;
        idx = y == 27.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 7510.0 : 0.0 ) ) : idx;
        idx = y == 26.0 ? ( x <= 7.0 ? 65492.0 : ( x <= 15.0 ? 7514.0 : 0.0 ) ) : idx;
        idx = y == 25.0 ? ( x <= 7.0 ? 65497.0 : ( x <= 15.0 ? 5542.0 : 0.0 ) ) : idx;
        idx = y == 24.0 ? ( x <= 7.0 ? 49113.0 : ( x <= 15.0 ? 5561.0 : 0.0 ) ) : idx;
        idx = y == 23.0 ? ( x <= 7.0 ? 28629.0 : ( x <= 15.0 ? 30125.0 : 0.0 ) ) : idx;
        idx = y == 22.0 ? ( x <= 7.0 ? 27229.0 : ( x <= 15.0 ? 29802.0 : 0.0 ) ) : idx;
        idx = y == 21.0 ? ( x <= 7.0 ? 38260.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;
        idx = y == 20.0 ? ( x <= 7.0 ? 38388.0 : ( x <= 15.0 ? 62973.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 19.0 ? ( x <= 7.0 ? 27088.0 : ( x <= 15.0 ? 65525.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 18.0 ? ( x <= 7.0 ? 43328.0 : ( x <= 15.0 ? 21845.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 29701.0 : 0.0 ) ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 21509.0 : 0.0 ) ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 57296.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 62720.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 127.0 : 0.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 85.0 : 0.0 ) ) : idx;
    }
    else
    {
        idx = y == 30.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5376.0 : 0.0 ) ) : idx;
        idx = y == 29.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 27200.0 : 0.0 ) ) : idx;
        idx = y == 28.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 44949.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 27.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 23127.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 26.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 30107.0 : 0.0 ) ) : idx;
        idx = y == 25.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 30038.0 : 0.0 ) ) : idx;
        idx = y == 24.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 21925.0 : 0.0 ) ) : idx;
        idx = y == 23.0 ? ( x <= 7.0 ? 48960.0 : ( x <= 15.0 ? 5561.0 : 0.0 ) ) : idx;
        idx = y == 22.0 ? ( x <= 7.0 ? 28224.0 : ( x <= 15.0 ? 7597.0 : 0.0 ) ) : idx;
        idx = y == 21.0 ? ( x <= 7.0 ? 26880.0 : ( x <= 15.0 ? 7530.0 : 0.0 ) ) : idx;
        idx = y == 20.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;
        idx = y == 19.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 32095.0 : 0.0 ) ) : idx;
        idx = y == 18.0 ? ( x <= 7.0 ? 25600.0 : ( x <= 15.0 ? 32767.0 : 0.0 ) ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 7509.0 : 0.0 ) ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1397.0 : 0.0 ) ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1525.0 : 0.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 16469.0 : ( x <= 15.0 ? 6101.0 : 0.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 22013.0 : ( x <= 15.0 ? 23893.0 : 0.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 63485.0 : ( x <= 15.0 ? 30039.0 : 0.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 21885.0 : ( x <= 15.0 ? 30021.0 : 0.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 93.0 : ( x <= 15.0 ? 29952.0 : 0.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 93.0 : ( x <= 15.0 ? 23808.0 : 0.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 21.0 : ( x <= 15.0 ? 5440.0 : 0.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5440.0 : 0.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5952.0 : 0.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 8144.0 : 0.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 2000.0 : 0.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 24564.0 : 0.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65360.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21760.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;
    }
    
    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 18.0 ? idx : 0.0;

    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;
    color = idx == 3.0 ? y > 16.0 ? RGB( 240, 208, 176 ) : RGB( 255, 255, 255 ) : color;  
}

void SpriteBillTorsoR( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 13.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 42240.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 21824.0 : ( x <= 15.0 ? 21.0 : 0.0 ) ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 58688.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 58624.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 28240.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 44004.0 : ( x <= 15.0 ? 117.0 : 0.0 ) ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 61433.0 : ( x <= 15.0 ? 494.0 : 0.0 ) ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 61433.0 : ( x <= 15.0 ? 491.0 : 0.0 ) ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 56313.0 : ( x <= 15.0 ? 1947.0 : 1024.0 ) ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 63165.0 : ( x <= 15.0 ? 21867.0 : 6485.0 ) ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 23540.0 : ( x <= 15.0 ? 57301.0 : 31671.0 ) ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 65488.0 : ( x <= 15.0 ? 21851.0 : 5461.0 ) ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 64848.0 : ( x <= 15.0 ? 39515.0 : 425.0 ) ) : idx;
    
    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;    
    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;
    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;
}

void SpriteBillTorsoT( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 25.0 ? ( x <= 7.0 ? 0.0 : 16.0 ) : idx;
    idx = y == 24.0 ? ( x <= 7.0 ? 0.0 : 116.0 ) : idx;
    idx = y == 23.0 ? ( x <= 7.0 ? 0.0 : 105.0 ) : idx;
    idx = y == 22.0 ? ( x <= 7.0 ? 0.0 : 116.0 ) : idx;
    idx = y == 21.0 ? ( x <= 7.0 ? 0.0 : 356.0 ) : idx;
    idx = y == 20.0 ? ( x <= 7.0 ? 0.0 : 1652.0 ) : idx;
    idx = y == 19.0 ? ( x <= 7.0 ? 0.0 : 1652.0 ) : idx;
    idx = y == 18.0 ? ( x <= 7.0 ? 0.0 : 1636.0 ) : idx;
    idx = y == 17.0 ? ( x <= 7.0 ? 0.0 : 1397.0 ) : idx;
    idx = y == 16.0 ? ( x <= 7.0 ? 16384.0 : 1654.0 ) : idx;
    idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : 1382.0 ) : idx;
    idx = y == 14.0 ? ( x <= 7.0 ? 16384.0 : 1655.0 ) : idx;
    idx = y == 13.0 ? ( x <= 7.0 ? 16384.0 : 1399.0 ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 36928.0 : 1654.0 ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 57744.0 : 1639.0 ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 55140.0 : 1398.0 ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 40921.0 : 2038.0 ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 40868.0 : 2038.0 ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 26256.0 : 1957.0 ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 39908.0 : 505.0 ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 31737.0 : 510.0 ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 65529.0 : 123.0 ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 64116.0 : 127.0 ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 21968.0 : 21.0 ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 27600.0 : 0.0 ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 44880.0 : 1.0 ) : idx;
    
    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 14.0 ? idx : 0.0;    
    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;
    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;
}

void SpriteBillTorsoTR( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 15.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 0.0 ) ) : idx;
    idx = y == 14.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 54272.0 : 1.0 ) ) : idx;
    idx = y == 13.0 ? ( x <= 7.0 ? 1280.0 : ( x <= 15.0 ? 47360.0 : 1.0 ) ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 6736.0 : ( x <= 15.0 ? 26964.0 : 0.0 ) ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 1445.0 : ( x <= 15.0 ? 7037.0 : 0.0 ) ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 24405.0 : ( x <= 15.0 ? 1757.0 : 0.0 ) ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 24485.0 : ( x <= 15.0 ? 6583.0 : 0.0 ) ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 43348.0 : ( x <= 15.0 ? 6765.0 : 0.0 ) ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 26356.0 : ( x <= 15.0 ? 6747.0 : 0.0 ) ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 56317.0 : ( x <= 15.0 ? 1654.0 : 0.0 ) ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 23549.0 : ( x <= 15.0 ? 1657.0 : 0.0 ) ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 32509.0 : ( x <= 15.0 ? 509.0 : 0.0 ) ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 49005.0 : ( x <= 15.0 ? 507.0 : 0.0 ) ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 64953.0 : ( x <= 15.0 ? 95.0 : 0.0 ) ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 63161.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 42724.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;
    
    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 18.0 ? idx : 0.0;    
    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;
    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;
}

void SpriteBillTorsoBR( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 21.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;
    idx = y == 20.0 ? ( x <= 7.0 ? 38208.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;
    idx = y == 19.0 ? ( x <= 7.0 ? 25680.0 : ( x <= 15.0 ? 26.0 : 0.0 ) ) : idx;
    idx = y == 18.0 ? ( x <= 7.0 ? 59648.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
    idx = y == 17.0 ? ( x <= 7.0 ? 59984.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;
    idx = y == 16.0 ? ( x <= 7.0 ? 63460.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;
    idx = y == 15.0 ? ( x <= 7.0 ? 22521.0 : ( x <= 15.0 ? 21.0 : 0.0 ) ) : idx;
    idx = y == 14.0 ? ( x <= 7.0 ? 49145.0 : ( x <= 15.0 ? 118.0 : 0.0 ) ) : idx;
    idx = y == 13.0 ? ( x <= 7.0 ? 64505.0 : ( x <= 15.0 ? 474.0 : 0.0 ) ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 64505.0 : ( x <= 15.0 ? 1946.0 : 0.0 ) ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 63396.0 : ( x <= 15.0 ? 1894.0 : 0.0 ) ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 39908.0 : ( x <= 15.0 ? 7653.0 : 0.0 ) ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 32720.0 : ( x <= 15.0 ? 1951.0 : 0.0 ) ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 49104.0 : ( x <= 15.0 ? 6783.0 : 0.0 ) ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 60736.0 : ( x <= 15.0 ? 30063.0 : 0.0 ) ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 58970.0 : 1.0 ) ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 39504.0 : 22.0 ) ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 26896.0 : 109.0 ) ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 105.0 ) ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 36864.0 : 485.0 ) ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 400.0 ) ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 0.0 : 64.0 ) ) : idx;
    
    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 21.0 ? idx : 0.0;    
    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;
    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;
    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;
}

void SpriteBillLegs( inout vec3 color, float x, float y, float frame )
{
    // lower body
    float idx = 0.0;
    
    if ( frame == 0.0 )
    {
        x -= 2.0;
        idx = y == 19.0 ? ( x <= 7.0 ? 62800.0 : 1.0 ) : idx;
        idx = y == 18.0 ? ( x <= 7.0 ? 43664.0 : 1.0 ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 43664.0 : 1.0 ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 64080.0 : 1.0 ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 42320.0 : 6.0 ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 43328.0 : 27.0 ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 42560.0 : 26.0 ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 22848.0 : 110.0 ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 38144.0 : 26.0 ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 39168.0 : 26.0 ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 42560.0 : 7.0 ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 43344.0 : 6.0 ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 63892.0 : 1.0 ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 27241.0 : 0.0 ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 32357.0 : 0.0 ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 6756.0 : 0.0 ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 27216.0 : 0.0 ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 43584.0 : 5.0 ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 43584.0 : 26.0 ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 21824.0 : 21.0 ) : idx;
        idx = x >= 0.0 && x < 12.0 ? idx : 0.0;
    }
    else if ( frame == 1.0 )
    {
        idx = y == 19.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 341.0 : 0.0 ) ) : idx;
        idx = y == 18.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 1466.0 : 0.0 ) ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 6570.0 : 0.0 ) ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 27246.0 : 0.0 ) ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 43626.0 : 1.0 ) ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 43374.0 : 6.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 42090.0 : 6.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 42267.0 : 1.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 43610.0 : 1.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 59648.0 : ( x <= 15.0 ? 27206.0 : 0.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 43264.0 : ( x <= 15.0 ? 6721.0 : 0.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 28224.0 : ( x <= 15.0 ? 1616.0 : 0.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 6800.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 2000.0 : ( x <= 15.0 ? 425.0 : 0.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 420.0 : 0.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 425.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 1961.0 : ( x <= 15.0 ? 6720.0 : 0.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 5796.0 : ( x <= 15.0 ? 1280.0 : 0.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 31376.0 : 0.0 ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 21824.0 : 0.0 ) : idx;
        idx = x >= 0.0 && x < 18.0 ? idx : 0.0;
    }
    else
    {   
        idx = y == 18.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 422.0 : 0.0 ) ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 342.0 : 0.0 ) ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 36880.0 : ( x <= 15.0 ? 362.0 : 0.0 ) ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 21860.0 : ( x <= 15.0 ? 489.0 : 0.0 ) ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 43428.0 : ( x <= 15.0 ? 421.0 : 0.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 44457.0 : ( x <= 15.0 ? 1962.0 : 0.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 54377.0 : ( x <= 15.0 ? 1710.0 : 0.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 16489.0 : ( x <= 15.0 ? 1765.0 : 0.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 6480.0 : 0.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 27200.0 : 0.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 26880.0 : 0.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 4.0 : ( x <= 15.0 ? 30976.0 : 0.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 43264.0 : 1.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 1.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21504.0 : 0.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 5.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 90.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 426.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 20480.0 : 85.0 ) ) : idx;
        idx = x >= 0.0 && x < 22.0 ? idx : 0.0;
    }
    
    idx = SPRITE_DEC_4( x, idx );
    

    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;
    color = idx == 2.0 ? RGB( 0,   88,  248 ) : color;
    color = idx == 3.0 ? RGB( 255, 224, 168 ) : color;   
}

void SpriteBillProne( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 16.0 ? ( x <= 7.0 ? 64.0 : 0.0 ) : idx;
    idx = y == 15.0 ? ( x <= 7.0 ? 400.0 : 0.0 ) : idx;
    idx = y == 14.0 ? ( x <= 7.0 ? 1940.0 : 0.0 ) : idx;
    idx = y == 13.0 ? ( x <= 7.0 ? 6745.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 84.0 : 0.0 ) ) ) : idx;
    idx = y == 12.0 ? ( x <= 7.0 ? 27044.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 425.0 : 0.0 ) ) ) : idx;
    idx = y == 11.0 ? ( x <= 7.0 ? 27024.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 341.0 : 1280.0 ) ) ) : idx;
    idx = y == 10.0 ? ( x <= 7.0 ? 7744.0 : ( x <= 15.0 ? 20480.0 : ( x <= 23.0 ? 22005.0 : 6485.0 ) ) ) : idx;
    idx = y == 9.0 ? ( x <= 7.0 ? 6800.0 : ( x <= 15.0 ? 41984.0 : ( x <= 23.0 ? 62966.0 : 31710.0 ) ) ) : idx;
    idx = y == 8.0 ? ( x <= 7.0 ? 18128.0 : ( x <= 15.0 ? 64773.0 : ( x <= 23.0 ? 38747.0 : 27306.0 ) ) ) : idx;
    idx = y == 7.0 ? ( x <= 7.0 ? 38564.0 : ( x <= 15.0 ? 65370.0 : ( x <= 23.0 ? 65435.0 : 5461.0 ) ) ) : idx;
    idx = y == 6.0 ? ( x <= 7.0 ? 59833.0 : ( x <= 15.0 ? 65390.0 : ( x <= 23.0 ? 49051.0 : 501.0 ) ) ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 60009.0 : ( x <= 15.0 ? 48602.0 : ( x <= 23.0 ? 44774.0 : 101.0 ) ) ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 44718.0 : ( x <= 15.0 ? 64986.0 : ( x <= 23.0 ? 22267.0 : 126.0 ) ) ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 43753.0 : ( x <= 15.0 ? 63125.0 : ( x <= 23.0 ? 43454.0 : 31.0 ) ) ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 22185.0 : ( x <= 15.0 ? 62784.0 : ( x <= 23.0 ? 58495.0 : 5.0 ) ) ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 340.0 : ( x <= 15.0 ? 54272.0 : ( x <= 23.0 ? 20511.0 : 0.0 ) ) ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : ( x <= 23.0 ? 5.0 : 0.0 ) ) ) : idx;
    
    idx = SPRITE_DEC_4( x, idx );
    
    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;
    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;
    color = idx == 2.0 ? x < 15.0 ? RGB( 0,   88,  248 ) : RGB( 248, 56,  0   ) : color;
    color = idx == 3.0 ? x < 15.0 ? RGB( 255, 224, 168 ) : RGB( 240, 208, 176 ) : color;   
}

void SpriteBillJump( inout vec3 color, float x, float y, float frame )
{
    float idx = 0.0;
    bool colorA;
    
    if ( frame == 0.0 )
    {   
        colorA = x > 10.0;
        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 53312.0 : ( x <= 15.0 ? 95.0 : 0.0 ) ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 53648.0 : ( x <= 15.0 ? 415.0 : 16.0 ) ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 25956.0 : ( x <= 15.0 ? 1947.0 : 100.0 ) ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 38745.0 : ( x <= 15.0 ? 7787.0 : 109.0 ) ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 24549.0 : ( x <= 15.0 ? 27247.0 : 107.0 ) ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 38825.0 : ( x <= 15.0 ? 43375.0 : 26.0 ) ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 59748.0 : ( x <= 15.0 ? 38527.0 : 26.0 ) ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 65428.0 : ( x <= 15.0 ? 27295.0 : 5.0 ) ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 49124.0 : ( x <= 15.0 ? 27287.0 : 0.0 ) ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 49120.0 : ( x <= 15.0 ? 43737.0 : 1.0 ) ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 27600.0 : ( x <= 15.0 ? 43882.0 : 1.0 ) ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 48960.0 : ( x <= 15.0 ? 27247.0 : 0.0 ) ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 27263.0 : 0.0 ) ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 5759.0 : 0.0 ) ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 341.0 : 0.0 ) ) : idx;
        idx = x >= 0.0 && x < 20.0 ? idx : 0.0;
    }
    else
    {
        colorA = y < 9.0;
        idx = y == 19.0 ? ( x <= 7.0 ? 0.0 : 84.0 ) : idx;
        idx = y == 18.0 ? ( x <= 7.0 ? 20480.0 : 409.0 ) : idx;
        idx = y == 17.0 ? ( x <= 7.0 ? 26880.0 : 1642.0 ) : idx;
        idx = y == 16.0 ? ( x <= 7.0 ? 48960.0 : 6521.0 ) : idx;
        idx = y == 15.0 ? ( x <= 7.0 ? 65488.0 : 1533.0 ) : idx;
        idx = y == 14.0 ? ( x <= 7.0 ? 65268.0 : 374.0 ) : idx;
        idx = y == 13.0 ? ( x <= 7.0 ? 65268.0 : 5718.0 ) : idx;
        idx = y == 12.0 ? ( x <= 7.0 ? 59837.0 : 32155.0 ) : idx;
        idx = y == 11.0 ? ( x <= 7.0 ? 63229.0 : 32767.0 ) : idx;
        idx = y == 10.0 ? ( x <= 7.0 ? 56061.0 : 32447.0 ) : idx;
        idx = y == 9.0 ? ( x <= 7.0 ? 22205.0 : 5547.0 ) : idx;
        idx = y == 8.0 ? ( x <= 7.0 ? 44373.0 : 6741.0 ) : idx;
        idx = y == 7.0 ? ( x <= 7.0 ? 43945.0 : 1958.0 ) : idx;
        idx = y == 6.0 ? ( x <= 7.0 ? 43684.0 : 489.0 ) : idx;
        idx = y == 5.0 ? ( x <= 7.0 ? 43684.0 : 105.0 ) : idx;
        idx = y == 4.0 ? ( x <= 7.0 ? 23120.0 : 26.0 ) : idx;
        idx = y == 3.0 ? ( x <= 7.0 ? 17664.0 : 122.0 ) : idx;
        idx = y == 2.0 ? ( x <= 7.0 ? 16384.0 : 490.0 ) : idx;
        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : 1701.0 ) : idx;
        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : 336.0 ) : idx;
        idx = x >= 0.0 && x < 16.0 ? idx : 0.0;
    }
    
    idx = SPRITE_DEC_4( x, idx );
    
    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;
    color = idx == 2.0 ? colorA ? RGB( 0,   88,  248 ) : RGB( 248, 56,  0   ) : color;
    color = idx == 3.0 ? colorA ? RGB( 255, 224, 168 ) : RGB( 240, 208, 176 ) : color;   
}

void SpriteWaterCircle( inout vec3 color, float x, float y )
{
    float idx = 0.0;
    
    idx = y == 6.0 ? ( x <= 7.0 ? 14336.0 : 44.0 ) : idx;
    idx = y == 5.0 ? ( x <= 7.0 ? 49360.0 : 1795.0 ) : idx;
    idx = y == 4.0 ? ( x <= 7.0 ? 31874.0 : 33341.0 ) : idx;
    idx = y == 3.0 ? ( x <= 7.0 ? 819.0 : 52416.0 ) : idx;
    idx = y == 2.0 ? ( x <= 7.0 ? 47112.0 : 8238.0 ) : idx;
    idx = y == 1.0 ? ( x <= 7.0 ? 4144.0 : 3076.0 ) : idx;
    idx = y == 0.0 ? ( x <= 7.0 ? 36352.0 : 178.0 ) : idx;

    idx = SPRITE_DEC_4( x, idx );
    idx = x >= 0.0 && x < 16.0 ? idx : 0.0;
    
    color = idx == 1.0 ? RGB( 0,    0,   0   ) : color;
    color = idx == 2.0 ? RGB( 248,  56,  0   ) : color;
    color = idx == 3.0 ? RGB( 240,  208, 176 ) : color;
}

void DrawTurret( inout vec3 color, vec4 turret, float worldX, float worldY )
{
    SpriteTurretBase( color, worldX - turret.x + TURRET_SIZE.x * 0.5, worldY - turret.y + TURRET_SIZE.y * 0.5 );
    
    // left 
    float frame     = 0.0;
    float turretX   = worldX - turret.x;
    float turretY   = worldY - turret.y;

    if ( turret.z == 0.0 )
    {
        frame = 0.0;
        turretX += 14.0;
        turretY += 7.0;
    }
    else if ( turret.z == 1.0 )
    {
        frame = 1.0;
        turretX += 13.0;
        turretY += 7.0;
    }
    else if ( turret.z == 2.0 )
    {
        frame = 2.0;
        turretX += 8.0;
        turretY += 3.0;
        Swap( turretX, turretY );
        turretX = 15.0 - turretX;
    }     
    else if ( turret.z == 3.0 )
    {
        frame = 0.0;
        turretX += 15.0;
        turretY += 2.0;
        Swap( turretX, turretY );
        turretX = 15.0 - turretX;
        turretY = 21.0 - turretY;
    }
    else if ( turret.z == 4.0 )
    {
        frame = 2.0;
        turretX += 14.0;
        turretY += 3.0;
        Swap( turretX, turretY );
        turretX = 15.0 - turretX;
        turretY = 21.0 - turretY;
    }
    else if ( turret.z == 5.0 )
    {
        frame = 1.0;
        turretX += 4.0;
        turretY += 7.0;
        turretX = 15.0 - turretX;        
    }    
    else if ( turret.z == 6.0 )
    {
        frame = 0.0;
        turretX += 9.0;
        turretY += 7.0;
        turretX = 21.0 - turretX;       
    }     
    else if ( turret.z == 7.0 )
    {
        frame = 2.0;
        turretX += 10.0;
        turretY += 7.0;
        turretX = 21.0 - turretX;       
    }    
    else if ( turret.z == 8.0 )
    {
        frame = 1.0;
        turretX += 8.0;
        turretY += 12.0;
        Swap( turretX, turretY );       
    }  
    else if ( turret.z == 9.0 )
    {
        frame = 0.0;
        turretX += 15.0;
        turretY += 13.0;
        Swap( turretX, turretY );
        turretY = 21.0 - turretY;        
    }          
    else if ( turret.z == 10.0 )
    {
        frame = 1.0;
        turretX += 15.0;
        turretY += 12.0;
        Swap( turretX, turretY );
        turretY = 21.0 - turretY;        
    }
    else
    {
        frame = 2.0;
        turretX += 13.0;
        turretY += 8.0;        
    }      

    SpriteTurret( color, turretX, turretY, frame );
}

void DrawSoldier( inout vec3 color, vec4 soldier, vec4 soldierState, float worldX, float worldY )
{
    float soldierX = worldX - soldier.x + SOLDIER_SIZE.x * 0.5;
    float soldierY = worldY - soldier.y;
    soldierX = soldier.z < 0.0 ? SOLDIER_SIZE.x - soldierX : soldierX;
    SpriteSoldier( color, soldierX, soldierY, soldierState.y );        
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // we want 224x192 (overscan) and we want multiples of pixel size
    float resMultX      = floor( iResolution.x / NES_RES_X );
    float resMultY      = floor( iResolution.y / NES_RES_Y );
    float resRcp        = 1.0 / max( min( resMultX, resMultY ), 1.0 );
    float screenWidth   = floor( iResolution.x * resRcp );
    float screenHeight  = floor( iResolution.y * resRcp );
    float pixelX        = floor( fragCoord.x * resRcp );
    float pixelY        = floor( fragCoord.y * resRcp );  
    
    vec4 player         = LoadValue( txPlayer );
    vec4 playerState    = LoadValue( txPlayerState );
    vec4 playerDir      = LoadValue( txPlayerDir );
    vec4 camera         = LoadValue( txCamera );
    vec4 soldier0       = LoadValue( txSoldier0 );
    vec4 soldier1       = LoadValue( txSoldier1 );
    vec4 soldier2       = LoadValue( txSoldier2 );
    vec4 soldier0State  = LoadValue( txSoldier0State );
    vec4 soldier1State  = LoadValue( txSoldier1State );
    vec4 soldier2State  = LoadValue( txSoldier2State );
    vec4 sniper         = LoadValue( txSniper );
    vec4 turret0        = LoadValue( txTurret0 );
    vec4 turret1        = LoadValue( txTurret1 );

    float worldX        = pixelX + camera.x;
    float worldY        = pixelY - 8.0;
    
    vec2 screenUV = fragCoord.xy / iResolution.xy;
    vec3 color = texture( iChannel1, screenUV ).xyz;
            
    float sniperX = worldX - sniper.x + SNIPER_SIZE.x * 0.5;
    float sniperY = worldY - sniper.y;
    sniperX = sniper.z < 0.0 ? 24.0 - sniperX : sniperX;
    SpriteSniper( color, sniperX, sniperY );
    
    DrawTurret( color, turret0, worldX, worldY );
    DrawTurret( color, turret1, worldX, worldY );
    DrawSoldier( color, soldier0, soldier0State, worldX, worldY );
    DrawSoldier( color, soldier1, soldier1State, worldX, worldY );
    DrawSoldier( color, soldier2, soldier2State, worldX, worldY );
   
    // draw player
    float billX = worldX - player.x;
    float billY = worldY - player.y;
    billX = playerDir.w > 0.0 && fract( 3.0 * iTime ) < 0.5 ? 100.0 : billX;
    if ( playerState.x == STATE_PRONE )
    {
        billX += BILL_PRONE_SIZE.x * 0.5;
        billX = playerDir.z < 0.0 ? BILL_PRONE_SIZE.x - billX : billX;
        SpriteBillProne( color, billX, billY );
    }
    else if ( playerState.x == STATE_JUMP )
    {
        billX += BILL_JUMP_SIZE.x * 0.5;
        billX = playerDir.z < 0.0 ? BILL_JUMP_SIZE.x - billX : billX;
        SpriteBillJump( color, billX, billY, playerState.y );
    }
    else
    {           
        billX += BILL_RUN_SIZE.x * 0.5;
        billX = playerDir.z < 0.0 ? BILL_RUN_SIZE.x - billX : billX;        

        if ( playerState.x == STATE_WATER || playerState.x == STATE_UNDER_WATER )
        {
            SpriteWaterCircle( color, billX, billY - 4.0 );
        }
        
        if ( playerState.x != STATE_WATER && playerState.x != STATE_UNDER_WATER )
        {
            SpriteBillLegs( color, billX, billY, playerState.y );            
        }

        float torsoX = billX + ( playerState.y == 0.0 ? 0.0 : -2.0 );
        float torsoY = billY + ( playerState.x == STATE_WATER ? -8.0 : -20.0 );
        if ( playerState.x != STATE_UNDER_WATER )
        {
            if ( playerDir.y > 0.0 && abs( playerDir.x ) > 0.0 )
            {
                SpriteBillTorsoTR( color, torsoX - 2.0, torsoY + 1.0 );            
            }
            else if ( playerDir.y > 0.0 )        
            {
                SpriteBillTorsoT( color, torsoX, torsoY + 1.0 );
            }
            else if ( playerDir.y < 0.0 )
            {
                SpriteBillTorsoBR( color, torsoX, torsoY + 7.0 );
            }
            else
            {
                SpriteBillTorsoR( color, torsoX, torsoY + 1.0 );
            }
        }
    }

    fragColor = vec4( color, 1.0 );
}